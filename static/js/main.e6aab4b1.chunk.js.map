{"version":3,"sources":["components/inputFile.tsx","components/member.tsx","components/memberList.tsx","components/teams.tsx","components/createTeam.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Wrapper","styled","div","Label","label","Input","input","FileName","InputFile","props","useState","filename","setFileName","type","onChange","e","cb","targetName","target","files","item","name","MemberIcon","img","MemberName","Member","src","icon","alt","MemberList","members","length","map","m","Teams","teams","v","i","NumberOfMembers","NumberOfTeamMembers","CreateTeam","numberOfTeamMembers","setNumberOfTeamMembers","setTeams","value","parseInt","onClick","arrayChunk","shuffle","array","j","Math","floor","random","size","reduce","acc","index","slice","onFileChange","setMembers","a","text","json","JSON","parse","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6aab4b1.chunk.js","sourcesContent":["import React, { ChangeEventHandler, useState } from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\nconst Label = styled.label`\n`;\nconst Input = styled.input`\n  display: none;\n`;\nconst FileName = styled.div`\n  margin: 0 20px;\n`;\n\nconst onChange = (e: React.ChangeEvent<HTMLInputElement>, cb: ChangeEventHandler<HTMLInputElement>, setFileName:React.Dispatch<React.SetStateAction<string>>) => {\n  const targetName = e?.target?.files?.item(0)?.name\n  if (!targetName) return;\n  cb(e);\n  setFileName(targetName);\n};\n\ntype Props = {\n  type: string\n  onChange: ChangeEventHandler<HTMLInputElement>\n}\n\nconst InputFile = (props: Props) => {\n  const [filename, setFileName] = useState('選択されていません');\n  if (props.type !== 'file') return <p>typeの指定、間違ってるよ</p>;\n  return (\n    <Wrapper>\n      <Label>\n        ファイルを選択\n        <Input\n          {...props}\n          onChange={e => onChange(e, props.onChange, setFileName)}\n        />\n      </Label>\n      <FileName>{filename}</FileName>\n    </Wrapper>\n  );\n};\n\nexport default InputFile;\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst MemberIcon = styled.img`\n  width: 40px;\n  vertical-align: middle;\n`\nconst MemberName = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 10px;\n  font-size: 2em\n`\n\ntype Props = {\n  name: string\n  icon: string\n}\n\nconst Member = (props: Props) => {\n  return (\n    <Wrapper>\n      <MemberIcon src={props.icon} alt={props.name}/>\n      <MemberName>{props.name}</MemberName>\n    </Wrapper>\n  )\n}\n\nexport default Member","import React from 'react';\nimport Member from './member'\n\ntype Props = {\n  members: Members\n}\n\nexport type Members = {\n  name: string\n  icon: string\n}[]\n\nconst MemberList = (props: Props) => {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>icon</th>\n          <th>name</th>\n        </tr>\n      </thead>\n      {props.members.length ? props.members.map((m) => {\n        return (\n          <tr key={m.name}>\n            <Member name={m.name} icon={m.icon}/>\n          </tr>\n        )\n      }): <></>}\n    </table>\n  )\n}\n\nexport default MemberList","import React from 'react';\nimport styled from 'styled-components'\nimport {Members} from './memberList'\nimport Member from './member'\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\ntype Props = {\n  teams: Members[]\n}\n\nconst Teams = (props: Props) => {\n  return (\n    <Wrapper>\n      <table>\n        <thead>\n          <tr>\n            <th>team</th>\n            <th>member</th>\n          </tr>\n        </thead>\n      {props.teams?.map((v, i) => {\n        return (\n          <tr key={i}>\n            <td>{i}</td>\n            {v.map(m => {\n              return (\n                <td>\n                  <Member name={m.name} icon={m.icon} />\n                </td>\n              )\n            })}\n          </tr>\n        )\n      })}\n      </table>\n    </Wrapper>\n  )\n}\n\nexport default Teams","import React, { useState } from 'react';\nimport styled from 'styled-components'\nimport {Members} from './memberList'\nimport Teams from './teams'\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\nconst NumberOfMembers = styled.div`\n  margin-right: 20px;\n`\nconst NumberOfTeamMembers = styled.div`\n  margin-right: 20px;\n`\n\ntype Props = {\n  members: Members\n}\n\nconst CreateTeam = (props: Props) => {\n  const [numberOfTeamMembers, setNumberOfTeamMembers] = useState(4)\n  const [teams, setTeams] = useState < Members[]>()\n  return (\n    <>\n    <Wrapper>\n      <NumberOfMembers>参加者 {props.members.length}人</NumberOfMembers>\n      <NumberOfTeamMembers>チームあたり <input type=\"number\" value={numberOfTeamMembers} onChange={e => { setNumberOfTeamMembers(parseInt(e.target.value)) }}/>人</NumberOfTeamMembers>\n      <button type='button' onClick={e => { setTeams(arrayChunk(shuffle(props.members), numberOfTeamMembers))}}>チーム作成</button>\n    </Wrapper>\n    {teams ?\n      <Teams\n        teams={teams}\n      />\n    : <></>}\n    </>\n  )\n}\n\nexport default CreateTeam\n\nconst shuffle = ([...array]) => {\n  for (let i = array.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nconst arrayChunk = ([...array], size = 1) => {\n  return array.reduce((acc, value, index) => index % size ? acc : [...acc, array.slice(index, index + size)], []);\n}","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport InputFile from './components/inputFile'\nimport MemberList, {Members} from './components/memberList'\nimport CreateTeam from './components/createTeam'\n\nfunction App() {\n  const [members, setMembers] = useState<Members>([])\n  return (\n    <div className=\"App\">\n      <InputFile\n        type='file'\n        onChange={e => onFileChange(e, setMembers)}\n      />\n      <MemberList\n        members={members}\n      />\n      <CreateTeam\n        members={members}\n      />\n    </div>\n  );\n}\n\nconst onFileChange= async (e: ChangeEvent<HTMLInputElement>, setMembers: React.Dispatch<React.SetStateAction<Members>>) => {\n  let text = await e.target.files?.item(0)?.text()\n  if (!text) return\n  const json: {members: Members} = JSON.parse(text)\n  setMembers(json.members)\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}